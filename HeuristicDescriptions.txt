zoneRatio measures the ratio of pegs in the "zones" of the board, or the four extrusions off of the center box, to the number of pegs in the central 3x3 square. This was chosen as a heuristic because it's more difficult to remove "zone" pegs than "central" pegs, and thus we hope to minimize our zoneRatio.
avgZonePegCount is a variant on the previous idea. Instead of measuring the ratio of zone to center, it finds the average number of pegs in zones of the board.
badPegCount gives us a count of "bad" pegs. We've defined these as pegs that either have no neighbors, are entirely surrounded, or are on an edge. We want to minimize our count of any of these bad pegs as much as possible
adjEmptys counts the number of empty slots on the board that are adjacent to a peg. Good play should minimize how spread out our pegs are, and should thus minimize the number of empty squares adjacent to a peg if possible. Note that this heuristic didn't turn out too well, as it turns out pegs one empty space away from each other are often pretty good too.
innerMoves simply returns the count of available moves from the each board state achievable from the board state in question *-1. ADVISE AGAINST. This is both computationally expensive and not that great as a heuristic.
innerMoveArbitrary was meant to be a more efficient version of the above, finding the moves available after a current move is arbitrarily chosen. ADVISE AGAINST. Even worse than the last one.
largestManhattanDistance ended up being one of the best heuristics, even though it's also fairly computationally intense. It returns the largest manhattan distance between two pegs on the board. The idea here is that by minimizing that largest distance, we bring all of the pegs closer together, which generally provides more options in terms of moves.
cornerHate is quite simple. It returns a count of pegs in the corners of the board, under the mindset that these pegs are among the worst to have.
PCLNZZ is the second of the two best heuristics. It stands for Peg Count of Lowest Non-Zero Zone. As it's name implies, it returns the number of pegs in the zone with the lowest non-zero number of pegs, though it also adds a constant 6 (determined over multiple tests) times the number of zones larger than our small-count zone. This is based on the idea that the easiest solution to this game involves emptying the zones one at a time. Thus, you want to prioritize moves that reduce the peg count of the zone with the least pegs. This proved very effective, resulting in board states that looked like human play.
 